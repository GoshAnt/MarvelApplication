{"version":3,"sources":["components/pages/SinglePage.js"],"names":["SinglePage","_ref","Component","dataType","id","useParams","_useState","useState","_useState2","_slicedToArray","data","setData","_useMarvelService","useMarvelService","loading","error","getComic","getCharacter","clearError","useEffect","updateData","then","onDataLoaded","errorMessage","_jsx","ErrorMessage","spinner","Spinner","content","_jsxs","_Fragment","children","AppBanner"],"mappings":"uKA+CeA,UAvCI,SAAHC,GAA+B,IAA1BC,EAASD,EAATC,UAAWC,EAAQF,EAARE,SACjBC,EAAMC,cAAND,GACPE,EAAwBC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,EAA6DC,cAAtDC,EAAOF,EAAPE,QAASC,EAAKH,EAALG,MAAOC,EAAQJ,EAARI,SAAUC,EAAYL,EAAZK,aAAcC,EAAUN,EAAVM,WAE/CC,qBAAU,WACNC,MACD,CAAChB,IAEJ,IAAMgB,EAAa,WAGf,OAFAF,IAEQf,GACJ,IAAK,QACDa,EAASZ,GAAIiB,KAAKC,GAClB,MACJ,IAAK,YACDL,EAAab,GAAIiB,KAAKC,KAI5BA,EAAe,SAACZ,GAClBC,EAAQD,IAGNa,EAAeR,EAAQS,cAACC,IAAY,IAAK,KACzCC,EAAUZ,EAAUU,cAACG,IAAO,IAAK,KACjCC,EAAYd,GAAWC,IAAUL,EAAmC,KAA3Bc,cAACtB,EAAS,CAACQ,KAAMA,IAEhE,OACImB,eAAAC,WAAA,CAAAC,SAAA,CACIP,cAACQ,IAAS,IACTT,EACAG,EACAE","file":"static/js/5.1e4738f6.chunk.js","sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst SinglePage = ({Component, dataType}) => {\r\n        const {id} = useParams();\r\n        const [data, setData] = useState(null);\r\n        const {loading, error, getComic, getCharacter, clearError} = useMarvelService();\r\n\r\n        useEffect(() => {\r\n            updateData()\r\n        }, [id])\r\n\r\n        const updateData = () => {\r\n            clearError();\r\n\r\n            switch (dataType) {\r\n                case 'comic':\r\n                    getComic(id).then(onDataLoaded);\r\n                    break;\r\n                case 'character':\r\n                    getCharacter(id).then(onDataLoaded);\r\n            }\r\n        }\r\n\r\n        const onDataLoaded = (data) => {\r\n            setData(data);\r\n        }\r\n\r\n        const errorMessage = error ? <ErrorMessage/> : null;\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const content = !(loading || error || !data) ? <Component data={data}/> : null;\r\n\r\n        return (\r\n            <>\r\n                <AppBanner/>\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n            </>\r\n        )\r\n}\r\n\r\nexport default SinglePage;"],"sourceRoot":""}