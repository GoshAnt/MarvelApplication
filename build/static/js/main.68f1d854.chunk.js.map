{"version":3,"sources":["services/MarvelService.js","hooks/http.hook.js","components/spinner/Spinner.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/charSearchForm/CharSearchForm.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/pages/Page404.js","components/pages/SingleComicPage.js","components/appHeader/AppHeader.js","components/app/App.js","index.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js"],"names":["MarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacterByName","_ref2","_callee2","name","_context2","getCharacter","_ref3","_callee3","id","_context3","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComics","getComics","_ref5","_callee5","_context5","_x3","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","Spinner","_jsxs","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","children","_jsx","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","AppBanner","className","src","avengers","alt","avengersLogo","View","imgStyle","href","RandomChar","setChar","_MarvelService","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMessage","ErrorMessage","spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoding","_useState5","_useState6","setOffset","_useState7","_useState8","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","_toConsumableArray","itemRefs","useRef","arr","item","i","tabIndex","ref","el","current","onCharSelected","forEach","classList","remove","add","focus","renderItems","disabled","Skeleton","_Fragment","CharInfo","charId","skeleton","CharSearchForm","Link","to","Formik","initialValues","charName","validationSchema","Yup","required","onSubmit","Form","htmlFor","Field","placeholder","FormikErrorMessage","component","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","_createClass","key","value","errorInfo","console","log","this","setState","Component","MainPage","selectedChar","decoration","ComicsList","comicsList","setComicsList","setNewItemLoading","comicsEnded","setComicsEnded","onComicsListLoaded","newComicsList","renderItmes","ComicsPage","Page404","comic","SingleComicPage","comicId","useParams","setComic","updateComic","onComicLoaded","AppHeader","NavLink","color","isActive","SingleComicLayout","lazy","SingleCharacterLayout","SinglePage","App","Router","Routes","Route","element","dataType","ReactDOM","createRoot","document","getElementById","render","React","StrictMode","objectFit","img"],"mappings":"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","file":"static/js/main.68f1d854.chunk.js","sourcesContent":["import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst MarvelService = () => {\r\n\tconst { loading, request, error, clearError } = useHttp();\r\n\r\n\tconst _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n\tconst _apiKey = \"apikey=c5d6fc8b83116d92ed468ce36bac6c62\";\r\n\tconst _baseOffset = 210;\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n\t\t);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n\tconst getCharacterByName = async (name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\t\treturn _transformCharacter(res.data.results[0]);\r\n\t};\r\n\r\n\tconst getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n\t\t);\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t};\r\n\r\n\tconst getComics = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t};\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description\r\n\t\t\t\t? `${char.description.slice(0, 210)}...`\r\n\t\t\t\t: \"There is no description for this character\",\r\n\t\t\tthumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items,\r\n\t\t};\r\n\t};\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || \"There is no description\",\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\r\n\t\t\t// optional chaining operator\r\n\t\t\tprice: comics.prices[0].price\r\n\t\t\t\t? `${comics.prices[0].price}$`\r\n\t\t\t\t: \"not available\",\r\n\t\t};\r\n\t};\r\n\r\n\treturn {\r\n\t\tloading,\r\n\t\terror,\r\n\t\tclearError,\r\n\t\tgetAllCharacters,\r\n\t\tgetCharacter,\r\n\t\tgetAllComics,\r\n\t\tgetComics,\r\n\t\tgetCharacterByName\r\n\t};\r\n};\r\n\r\nexport default MarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError}\r\n}","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import {useState, useEffect} from 'react';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport MarvelService from '../../services/MarvelService';\r\n\r\nimport './randomChar.scss';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\n\r\nconst RandomChar = () => {\r\n\r\n    const [char, setChar] = useState(null);\r\n    const {loading, error, getCharacter, clearError} = MarvelService();\r\n\r\n    useEffect(() => {\r\n        updateChar();\r\n        const timerId = setInterval(updateChar, 60000);\r\n\r\n        return () => {\r\n            clearInterval(timerId)\r\n        }\r\n    }, [])\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char);\r\n    }\r\n\r\n    const updateChar = () => {\r\n        clearError();\r\n        const id = Math.floor(Math.random() * (1011400 - 1011000)) + 1011000;\r\n        getCharacter(id)\r\n            .then(onCharLoaded);\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !char) ? <View char={char} /> : null;\r\n\r\n    return (\r\n        <div className=\"randomchar\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n            <div className=\"randomchar__static\">\r\n                <p className=\"randomchar__title\">\r\n                    Random character for today!<br/>\r\n                    Do you want to get to know him better?\r\n                </p>\r\n                <p className=\"randomchar__title\">\r\n                    Or choose another one\r\n                </p>\r\n                <button onClick={updateChar} className=\"button button__main\">\r\n                    <div className=\"inner\">try it</div>\r\n                </button>\r\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, description, thumbnail, homepage, wiki} = char;\r\n    let imgStyle = {'objectFit' : 'cover'};\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = {'objectFit' : 'contain'};\r\n    }\r\n\r\n    return (\r\n        <div className=\"randomchar__block\">\r\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\r\n            <div className=\"randomchar__info\">\r\n                <p className=\"randomchar__name\">{name}</p>\r\n                <p className=\"randomchar__descr\">\r\n                    {description}\r\n                </p>\r\n                <div className=\"randomchar__btns\">\r\n                    <a href={homepage} className=\"button button__main\">\r\n                        <div className=\"inner\">homepage</div>\r\n                    </a>\r\n                    <a href={wiki} className=\"button button__secondary\">\r\n                        <div className=\"inner\">Wiki</div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RandomChar;","import {useState, useEffect, useRef} from 'react';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport MarvelService from '../../services/MarvelService';\r\nimport './charList.scss';\r\n\r\nconst CharList = (props) => {\r\n\r\n    const [charList, setCharList] = useState([]);\r\n    const [newItemLoading,setNewItemLoding] = useState(false);\r\n    const [offset, setOffset] = useState(210);\r\n    const [charEnded, setCharEnded] = useState(false);\r\n\r\n    const {loading, error, getAllCharacters} = MarvelService();\r\n    useEffect(() => {\r\n        onRequest(offset,true);\r\n    }, [])\r\n\r\n   const onRequest = (offset, initial) => {\r\n        initial ? setNewItemLoding(false) : setNewItemLoding(true);\r\n        getAllCharacters(offset)\r\n        .then(onCharListLoaded)\r\n     }\r\n\r\n   const onCharListLoaded = (newCharList) => {\r\n\r\n        let ended = false;\r\n        if(newCharList.length < 9) {\r\n            ended = true;\r\n        }\r\n\r\n        setCharList(charList => [...charList,...newCharList]);\r\n        setNewItemLoding( newItemLoading =>false);\r\n        setOffset(offset => offset + 9);\r\n        setCharEnded(charEnded => ended);\r\n     }   \r\n     const itemRefs = useRef([]);   \r\n\r\n     const focusOnItem = (id) => {\r\n         itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\r\n         itemRefs.current[id].classList.add('char__item_selected');\r\n         itemRefs.current[id].focus();\r\n     }\r\n\r\n    //  RENDER--------------\r\n\r\n    function renderItems(arr) {\r\n        const items =  arr.map((item, i) => {\r\n            let imgStyle = {'objectFit' : 'cover'};\r\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n                imgStyle = {'objectFit' : 'unset'};\r\n            }\r\n            \r\n            return (\r\n                <li \r\n                    className=\"char__item\"\r\n                    tabIndex={0}\r\n                    ref={el => itemRefs.current[i] = el}\r\n                    key={i}\r\n                    onClick={() => {\r\n                        props.onCharSelected(item.id);\r\n                        focusOnItem(i);\r\n                    }}\r\n                    >\r\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\r\n                        <div className=\"char__name\">{item.name}</div>\r\n                </li>\r\n            )\r\n        });\r\n\r\n\r\n    return (\r\n        <ul className=\"char__grid\">\r\n            {items}\r\n        </ul>\r\n    )\r\n}\r\n\r\n    const items = renderItems(charList);\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\r\n    return (\r\n        <div className=\"char__list\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {items}\r\n            <button className=\"button button__main button__long\"\r\n            disabled ={newItemLoading}\r\n            style ={{'display': charEnded ? 'none' : 'block'    }}\r\n            onClick ={() =>onRequest(offset)}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n   }\r\n\r\n\r\nexport default CharList;","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <>\r\n            <p className=\"char__select\">Please select a character to see information</p>\r\n            <div className=\"skeleton\">\r\n                <div className=\"pulse skeleton__header\">\r\n                    <div className=\"pulse skeleton__circle\"></div>\r\n                    <div className=\"pulse skeleton__mini\"></div>\r\n                </div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skeleton;","import { useState, useEffect } from 'react';\r\nimport MarvelService from '../../services/MarvelService';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Spinner from '../spinner/Spinner';\r\nimport Skeleton from '../skeleton/Skeleton'\r\nimport './charInfo.scss';\r\n\r\n\r\nconst CharInfo = (props) =>{\r\n\r\n    const [char,setChar] = useState(null);\r\n    \r\n    \r\n    const {loading, error, getCharacter} = MarvelService();\r\n\r\n    useEffect(() => {\r\n        updateChar()\r\n    }, [props.charId])\r\n\r\n    \r\n    const updateChar = () => {\r\n        const {charId} = props;\r\n\r\n        if(!charId) {\r\n            return;\r\n        }\r\n    getCharacter(charId)\r\n        .then(onCharLoaded)\r\n    }\r\n    const onCharLoaded = (char) => {\r\n        setChar(char);\r\n    }\r\n\r\n\r\n    const skeleton = char || loading || error ? null : <Skeleton/>;\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\r\n    return (\r\n        <div className=\"char__info\">\r\n           {skeleton}\r\n           {errorMessage}\r\n           {spinner}\r\n           {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst View = ({char}) => {\r\n    \r\n    const {name, description , thumbnail, homepage, wiki, comics} = char;\r\n    let imgStyle = {'objectFit': 'cover'};\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = {'objectFit' : 'contain'};\r\n    }\r\n    return (\r\n        <>\r\n         <div className=\"char__basics\">\r\n                <img src={thumbnail} alt={name} style={imgStyle}/>\r\n                <div>\r\n                    <div className=\"char__info-name\">{name}</div>\r\n                    <div className=\"char__btns\">\r\n                        <a href={wiki} className=\"button button__main\">\r\n                            <div className=\"inner\">Homepage</div>\r\n                        </a>\r\n                        <a href={homepage} className=\"button button__secondary\">\r\n                            <div className=\"inner\">Wiki</div>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"char__descr\">\r\n               {description}\r\n            </div>\r\n            <div className=\"char__comics\">Comics:</div>\r\n            <ul className=\"char__comics-list\">\r\n                {comics.length > 0 ? null : 'There is no comics with this character'}\r\n                {\r\n                    comics.map((item, i) => {\r\n                        if(i > 10) return;\r\n                      return(\r\n                          <li key ={i} className=\"char__comics-item\">\r\n                            {item.name}\r\n                    </li>\r\n                      )\r\n                    })\r\n                }\r\n               \r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CharInfo;","import {useState} from 'react';\r\nimport { Formik, Form, Field, ErrorMessage as FormikErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport MarvelService from '../../services/MarvelService';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport './charSearchForm.scss';\r\n\r\nconst CharSearchForm = () => {\r\n    const [char, setChar] = useState(null);\r\n    const {loading, error, getCharacterByName, clearError} = MarvelService();\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char);\r\n    }\r\n\r\n    const updateChar = (name) => {\r\n        clearError();\r\n\r\n        getCharacterByName(name)\r\n            .then(onCharLoaded);\r\n    }\r\n\r\n    const errorMessage = error ? <div className=\"char__search-critical-error\"><ErrorMessage /></div> : null;\r\n    const results = !char ? null : char.length > 0 ?\r\n                    <div className=\"char__search-wrapper\">\r\n                        <div className=\"char__search-success\">There is! Visit {char[0].name} page?</div>\r\n                        <Link to={`/characters/${char[0].id}`} className=\"button button__secondary\">\r\n                            <div className=\"inner\">To page</div>\r\n                        </Link>\r\n                    </div> : \r\n                    <div className=\"char__search-error\">\r\n                        The character was not found. Check the name and try again\r\n                    </div>;\r\n\r\n    return (\r\n        <div className=\"char__search-form\">\r\n            <Formik\r\n                initialValues = {{\r\n                    charName: ''\r\n                }}\r\n                validationSchema = {Yup.object({\r\n                    charName: Yup.string().required('This field is required')\r\n                })}\r\n                onSubmit = { ({charName}) => {\r\n                    updateChar(charName);\r\n                }}\r\n            >\r\n                <Form>\r\n                    <label className=\"char__search-label\" htmlFor=\"charName\">Or find a character by name:</label>\r\n                    <div className=\"char__search-wrapper\">\r\n                        <Field \r\n                            id=\"charName\" \r\n                            name='charName' \r\n                            type='text' \r\n                            placeholder=\"Enter name\"/>\r\n                        <button \r\n                            type='submit' \r\n                            className=\"button button__main\"\r\n                            disabled={loading}>\r\n                            <div className=\"inner\">find</div>\r\n                        </button>\r\n                    </div>\r\n                    <FormikErrorMessage component=\"div\" className=\"char__search-error\" name=\"charName\" />\r\n                </Form>\r\n            </Formik>\r\n            {results}\r\n            {errorMessage}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharSearchForm;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport CharSearchForm from '../charSearchForm/CharSearchForm';\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n\r\n    const [selectedChar, setChar] = useState(null);\r\n\r\n    const onCharSelected = (id) => {\r\n        setChar(id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar/>\r\n            </ErrorBoundary>\r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList onCharSelected={onCharSelected}/>\r\n                </ErrorBoundary>\r\n                <div>\r\n                    <ErrorBoundary>\r\n                        <CharInfo charId={selectedChar}/>\r\n                    </ErrorBoundary>\r\n                    <ErrorBoundary>\r\n                        <CharSearchForm/>\r\n                    </ErrorBoundary>\r\n                </div>\r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage;","import './comicsList.scss';\r\nimport {useState, useEffect} from 'react';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport MarvelService from '../../services/MarvelService';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst ComicsList = () => {\r\n\r\n    const [comicsList, setComicsList] = useState([]);\r\n    const [newItemLoading,setNewItemLoading] = useState(false);\r\n    const [offset,setOffset] = useState(0);\r\n    const [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n    const {loading,error, getAllComics} = MarvelService();\r\n\r\n    useEffect(()=> {\r\n        onRequest(offset,true);\r\n    },[])\r\n\r\n\r\n    const onRequest = (offset,initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n        getAllComics(offset)\r\n            .then(onComicsListLoaded);\r\n    }\r\n\r\n\r\n    const onComicsListLoaded = (newComicsList) => {\r\n        let ended = false;\r\n        if (newComicsList.length < 8) {\r\n            ended = true;\r\n        }\r\n        setComicsList([...comicsList, ...newComicsList]);\r\n        setNewItemLoading(false);\r\n        setOffset(offset + 8);\r\n        setComicsEnded(ended);\r\n    }\r\n\r\n   function renderItmes(arr) {\r\n    const items = arr.map((item,i)=>{\r\n        return (\r\n            <li className=\"comics__item\"  key={i}>\r\n            <Link to={`/comics/${item.id}`} >\r\n                <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\r\n                <div className=\"comics__item-name\">{item.title}</div>\r\n                <div className=\"comics__item-price\">{item.price}</div>\r\n            </Link>\r\n        </li>\r\n                    \r\n        )\r\n    })\r\n    return (\r\n        <ul className=\"comics__grid\">\r\n        {items}\r\n    </ul>\r\n    )\r\n   }\r\n   const items = renderItmes(comicsList);\r\n\r\n   const errorMessage = error ? <ErrorMessage/> : null;\r\n   const spinner = loading && !newItemLoading ? <Spinner/> : null;\r\n\r\n   return (\r\n       <div className=\"comics__list\">\r\n           {errorMessage}\r\n           {spinner}\r\n           {items}\r\n           <button \r\n               disabled={newItemLoading} \r\n               style={{'display' : comicsEnded ? 'none' : 'block'}}\r\n               className=\"button button__main button__long\"\r\n               onClick={() => onRequest(offset)}>\r\n               <div className=\"inner\">load more</div>\r\n           </button>\r\n       </div>\r\n   )\r\n}\r\n\r\nexport default ComicsList;","import ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\nexport default ComicsPage;","import ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Page404  = () => {\r\n return(\r\n    <div>\r\n    <ErrorMessage/>\r\n  \r\n        <p\r\n       style={{'text-align': 'center', 'font-size': '24px','font-weigth': 'bold'}}\r\n       >Page is not exist</p>\r\n       <Link style={{ 'color': '#9f0013','display': 'block','text-align': 'center', 'margin-top': '20px', 'font-size': '24px'}} to={\"/\"}> Back To Home Page</Link>\r\n      \r\n  </div>\r\n )\r\n}\r\nexport default Page404;","import './singleComic.scss';\r\nimport { useParams,Link } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport MarvelService from '../../services/MarvelService';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Spinner from '../spinner/Spinner';   \r\nconst SingleComicPage = () => {\r\n    const {comicId} = useParams();\r\n    const [comic, setComic] = useState(null);\r\n    const {loading, error, getComics, clearError} = MarvelService();\r\n\r\n    useEffect(() => {\r\n        updateComic()\r\n    }, [comicId])\r\n\r\n    \r\n    const updateComic = () => {\r\n        clearError()\r\n        getComics(comicId)\r\n            .then(onComicLoaded)\r\n    }\r\n    const onComicLoaded = (comic) => {\r\n        setComic(comic);\r\n    }\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !comic) ? <View comic={comic}/> : null;\r\n\r\n    return (\r\n       <>\r\n        {errorMessage}\r\n        {spinner}\r\n        {content}\r\n       </>\r\n    )\r\n}\r\nconst View = ({comic}) => {\r\n    const {title, description,pageCount,thumbnail,language,price} = comic;\r\n    return(\r\n<div className=\"single-comic\">\r\n            <img src={thumbnail} alt=\"title\" className=\"single-comic__img\"/>\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{title}</h2>\r\n                <p className=\"single-comic__descr\">{description}</p>\r\n                <p className=\"single-comic__descr\">{pageCount}</p>\r\n                <p className=\"single-comic__descr\">Language: {language}</p>\r\n                <div className=\"single-comic__price\">{price}</div>\r\n            </div>\r\n            <Link to={'/comics'} className=\"single-comic__back\">Back to all</Link>\r\n        </div>\r\n    )\r\n} \r\nexport default SingleComicPage;","import {Link, NavLink} from 'react-router-dom';\r\nimport './appHeader.scss';\r\n\r\nconst AppHeader = () => {\r\n    return (\r\n        <header className=\"app__header\">\r\n            <h1 className=\"app__title\">\r\n                <Link to=\"/\">\r\n                    <span>Marvel</span> information portal\r\n                </Link>\r\n            </h1>\r\n            <nav className=\"app__menu\">\r\n                <ul>\r\n                    <li><NavLink\r\n                    style={({isActive}) => ({color: isActive ? '#9f0013': 'inherit'})}\r\n                    to=\"/\">Characters</NavLink></li>\r\n                    /\r\n                    <li><NavLink\r\n                     style={({isActive}) => ({color: isActive ? '#9f0013': 'inherit'})}\r\n                     to=\"/comics\">Comics</NavLink></li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import {BrowserRouter as Router, Route, Routes} from 'react-router-dom';\r\nimport {lazy} from 'react';\r\nimport {MainPage, ComicsPage, Page404, SingleComicPage} from '../pages';\r\nimport AppHeader from \"../appHeader/AppHeader\";\r\n    const SingleComicLayout = lazy(() => import('../pages/singleComicLayout/SingleComicLayout'));\r\n    const SingleCharacterLayout = lazy(() => import('../pages/singleCharacterLayout/SingleCharacterLayout'));\r\n    const SinglePage = lazy(() => import('../pages/SinglePage'));\r\nconst App = () => {\r\n    \r\n    return (\r\n        <Router>\r\n            <div className=\"app\">\r\n                <AppHeader/>\r\n                <main>  \r\n                    <Routes>\r\n                        <Route  path=\"/\" element={ <MainPage/>}/>\r\n                        <Route  path=\"/comics\" element={<ComicsPage/>}/>\r\n                        <Route  path=\"/comics/:comicId\" element={<SingleComicPage/>}/>\r\n                        <Route path='*' element={<Page404/>}/>\r\n                        <Route path=\"/comics/:id\" element={ <SinglePage Component={SingleComicLayout} dataType='comic'/>}/>\r\n                        <Route path=\"/characters/:id\" element={  <SinglePage Component={SingleCharacterLayout} dataType='character'/>}/>\r\n\r\n                    </Routes>\r\n                </main>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport  ReactDOM  from 'react-dom/client';\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\nReactDOM\n    .createRoot(document.getElementById('root'))\n    .render(\n        <React.StrictMode>\n        <App />\n      </React.StrictMode>\n      );","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;\r\n"],"sourceRoot":""}